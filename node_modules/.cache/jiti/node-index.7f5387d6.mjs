"use strict";Object.defineProperty(exports, "__esModule", { value: true });Object.defineProperty(exports, "BuildEnvironment", { enumerable: true, get: function () {return _depCfG9u7Cn.B;} });Object.defineProperty(exports, "DevEnvironment", { enumerable: true, get: function () {return _depCfG9u7Cn.D;} });Object.defineProperty(exports, "build", { enumerable: true, get: function () {return _depCfG9u7Cn.f;} });Object.defineProperty(exports, "buildErrorMessage", { enumerable: true, get: function () {return _depCfG9u7Cn.m;} });Object.defineProperty(exports, "createBuilder", { enumerable: true, get: function () {return _depCfG9u7Cn.g;} });Object.defineProperty(exports, "createFilter", { enumerable: true, get: function () {return _depCfG9u7Cn.F;} });Object.defineProperty(exports, "createIdResolver", { enumerable: true, get: function () {return _depCfG9u7Cn.h;} });Object.defineProperty(exports, "createLogger", { enumerable: true, get: function () {return _depCfG9u7Cn.I;} });Object.defineProperty(exports, "createRunnableDevEnvironment", { enumerable: true, get: function () {return _depCfG9u7Cn.n;} });Object.defineProperty(exports, "createServer", { enumerable: true, get: function () {return _depCfG9u7Cn.c;} });Object.defineProperty(exports, "createServerHotChannel", { enumerable: true, get: function () {return _depCfG9u7Cn.y;} });Object.defineProperty(exports, "createServerModuleRunner", { enumerable: true, get: function () {return _depCfG9u7Cn.w;} });Object.defineProperty(exports, "createServerModuleRunnerTransport", { enumerable: true, get: function () {return _depCfG9u7Cn.x;} });Object.defineProperty(exports, "defaultAllowedOrigins", { enumerable: true, get: function () {return _constants.defaultAllowedOrigins;} });Object.defineProperty(exports, "defaultClientConditions", { enumerable: true, get: function () {return _constants.DEFAULT_CLIENT_CONDITIONS;} });Object.defineProperty(exports, "defaultClientMainFields", { enumerable: true, get: function () {return _constants.DEFAULT_CLIENT_MAIN_FIELDS;} });Object.defineProperty(exports, "defaultServerConditions", { enumerable: true, get: function () {return _constants.DEFAULT_SERVER_CONDITIONS;} });Object.defineProperty(exports, "defaultServerMainFields", { enumerable: true, get: function () {return _constants.DEFAULT_SERVER_MAIN_FIELDS;} });Object.defineProperty(exports, "defineConfig", { enumerable: true, get: function () {return _depCfG9u7Cn.d;} });Object.defineProperty(exports, "esbuildVersion", { enumerable: true, get: function () {return _esbuild.version;} });Object.defineProperty(exports, "fetchModule", { enumerable: true, get: function () {return _depCfG9u7Cn.v;} });Object.defineProperty(exports, "formatPostcssSourceMap", { enumerable: true, get: function () {return _depCfG9u7Cn.j;} });exports.isCSSRequest = void 0;Object.defineProperty(exports, "isFileLoadingAllowed", { enumerable: true, get: function () {return _depCfG9u7Cn.L;} });Object.defineProperty(exports, "isFileServingAllowed", { enumerable: true, get: function () {return _depCfG9u7Cn.K;} });Object.defineProperty(exports, "isRunnableDevEnvironment", { enumerable: true, get: function () {return _depCfG9u7Cn.q;} });Object.defineProperty(exports, "loadConfigFromFile", { enumerable: true, get: function () {return _depCfG9u7Cn.l;} });Object.defineProperty(exports, "loadEnv", { enumerable: true, get: function () {return _depCfG9u7Cn.M;} });Object.defineProperty(exports, "mergeAlias", { enumerable: true, get: function () {return _depCfG9u7Cn.E;} });Object.defineProperty(exports, "mergeConfig", { enumerable: true, get: function () {return _depCfG9u7Cn.C;} });Object.defineProperty(exports, "moduleRunnerTransform", { enumerable: true, get: function () {return _depCfG9u7Cn.z;} });Object.defineProperty(exports, "normalizePath", { enumerable: true, get: function () {return _depCfG9u7Cn.A;} });Object.defineProperty(exports, "optimizeDeps", { enumerable: true, get: function () {return _depCfG9u7Cn.o;} });Object.defineProperty(exports, "parseAst", { enumerable: true, get: function () {return _parseAst.parseAst;} });Object.defineProperty(exports, "parseAstAsync", { enumerable: true, get: function () {return _parseAst.parseAstAsync;} });Object.defineProperty(exports, "perEnvironmentPlugin", { enumerable: true, get: function () {return _depCfG9u7Cn.p;} });Object.defineProperty(exports, "perEnvironmentState", { enumerable: true, get: function () {return _depCfG9u7Cn.b;} });Object.defineProperty(exports, "preprocessCSS", { enumerable: true, get: function () {return _depCfG9u7Cn.k;} });Object.defineProperty(exports, "preview", { enumerable: true, get: function () {return _depCfG9u7Cn.e;} });Object.defineProperty(exports, "resolveConfig", { enumerable: true, get: function () {return _depCfG9u7Cn.r;} });Object.defineProperty(exports, "resolveEnvPrefix", { enumerable: true, get: function () {return _depCfG9u7Cn.N;} });Object.defineProperty(exports, "rollupVersion", { enumerable: true, get: function () {return _depCfG9u7Cn.G;} });Object.defineProperty(exports, "runnerImport", { enumerable: true, get: function () {return _depCfG9u7Cn.u;} });Object.defineProperty(exports, "searchForWorkspaceRoot", { enumerable: true, get: function () {return _depCfG9u7Cn.J;} });Object.defineProperty(exports, "send", { enumerable: true, get: function () {return _depCfG9u7Cn.H;} });Object.defineProperty(exports, "sortUserPlugins", { enumerable: true, get: function () {return _depCfG9u7Cn.s;} });exports.splitVendorChunk = splitVendorChunk;exports.splitVendorChunkPlugin = splitVendorChunkPlugin;Object.defineProperty(exports, "transformWithEsbuild", { enumerable: true, get: function () {return _depCfG9u7Cn.t;} });Object.defineProperty(exports, "version", { enumerable: true, get: function () {return _constants.VERSION;} });var _parseAst = await jitiImport("rollup/parseAst");
var _depCfG9u7Cn = await jitiImport("./chunks/dep-CfG9u7Cn.js");

var _constants = await jitiImport("./constants.js");
var _esbuild = await jitiImport("esbuild");
await jitiImport("node:fs");
await jitiImport("node:path");
await jitiImport("node:fs/promises");
await jitiImport("node:url");
await jitiImport("node:util");
await jitiImport("node:perf_hooks");
await jitiImport("node:module");
await jitiImport("node:crypto");
await jitiImport("path");
await jitiImport("fs");
await jitiImport("node:child_process");
await jitiImport("node:http");
await jitiImport("node:https");
await jitiImport("tty");
await jitiImport("util");
await jitiImport("net");
await jitiImport("events");
await jitiImport("url");
await jitiImport("http");
await jitiImport("stream");
await jitiImport("os");
await jitiImport("child_process");
await jitiImport("node:os");
await jitiImport("node:dns");
await jitiImport("vite/module-runner");
await jitiImport("module");
await jitiImport("node:readline");
await jitiImport("node:process");
await jitiImport("node:buffer");
await jitiImport("node:events");
await jitiImport("crypto");
await jitiImport("node:assert");
await jitiImport("node:v8");
await jitiImport("node:worker_threads");
await jitiImport("zlib");
await jitiImport("buffer");
await jitiImport("https");
await jitiImport("tls");
await jitiImport("node:net");
await jitiImport("assert");
await jitiImport("node:querystring");
await jitiImport("node:zlib");

const CSS_LANGS_RE =
// eslint-disable-next-line regexp/no-unused-capturing-group
/\.(css|less|sass|scss|styl|stylus|pcss|postcss|sss)(?:$|\?)/;

const isCSSRequest = (request) => CSS_LANGS_RE.test(request);exports.isCSSRequest = isCSSRequest;
class SplitVendorChunkCache {
  cache;
  constructor() {
    this.cache = /* @__PURE__ */new Map();
  }
  reset() {
    this.cache = /* @__PURE__ */new Map();
  }
}
function splitVendorChunk(options = {}) {
  const cache = options.cache ?? new SplitVendorChunkCache();
  return (id, { getModuleInfo }) => {
    if ((0, _depCfG9u7Cn.i)(id) && !isCSSRequest(id) && staticImportedByEntry(id, getModuleInfo, cache.cache)) {
      return "vendor";
    }
  };
}
function staticImportedByEntry(id, getModuleInfo, cache, importStack = []) {
  if (cache.has(id)) {
    return cache.get(id);
  }
  if (importStack.includes(id)) {
    cache.set(id, false);
    return false;
  }
  const mod = getModuleInfo(id);
  if (!mod) {
    cache.set(id, false);
    return false;
  }
  if (mod.isEntry) {
    cache.set(id, true);
    return true;
  }
  const someImporterIs = mod.importers.some(
    (importer) => staticImportedByEntry(
      importer,
      getModuleInfo,
      cache,
      importStack.concat(id)
    )
  );
  cache.set(id, someImporterIs);
  return someImporterIs;
}
function splitVendorChunkPlugin() {
  const caches = [];
  function createSplitVendorChunk(output, config) {
    const cache = new SplitVendorChunkCache();
    caches.push(cache);
    const build = config.build ?? {};
    const format = output.format;
    if (!build.ssr && !build.lib && format !== "umd" && format !== "iife") {
      return splitVendorChunk({ cache });
    }
  }
  return {
    name: "vite:split-vendor-chunk",
    config(config) {
      let outputs = config.build?.rollupOptions?.output;
      if (outputs) {
        outputs = (0, _depCfG9u7Cn.a)(outputs);
        for (const output of outputs) {
          const viteManualChunks = createSplitVendorChunk(output, config);
          if (viteManualChunks) {
            if (output.manualChunks) {
              if (typeof output.manualChunks === "function") {
                const userManualChunks = output.manualChunks;
                output.manualChunks = (id, api) => {
                  return userManualChunks(id, api) ?? viteManualChunks(id, api);
                };
              } else {
                console.warn(
                  "(!) the `splitVendorChunk` plugin doesn't have any effect when using the object form of `build.rollupOptions.output.manualChunks`. Consider using the function form instead."
                );
              }
            } else {
              output.manualChunks = viteManualChunks;
            }
          }
        }
      } else {
        return {
          build: {
            rollupOptions: {
              output: {
                manualChunks: createSplitVendorChunk({}, config)
              }
            }
          }
        };
      }
    },
    buildStart() {
      caches.forEach((cache) => cache.reset());
    }
  };
} /* v9-b719bef9cfe7e893 */
